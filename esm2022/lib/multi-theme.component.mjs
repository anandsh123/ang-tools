import { Component, inject } from '@angular/core';
import { NgbOffcanvas } from '@ng-bootstrap/ng-bootstrap';
import * as i0 from "@angular/core";
import * as i1 from "./multi-theme.service";
import * as i2 from "@angular/forms";
class MultiThemeComponent {
    constructor(service) {
        this.service = service;
        this.offcanvasService = inject(NgbOffcanvas);
        this.selectedTheme = '';
    }
    openThemeCanvas(content) {
        this.offcanvasService.open(content, { position: 'end', backdrop: false });
    }
    changeTheme() {
        this.service.loadTheme(this.selectedTheme);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: MultiThemeComponent, deps: [{ token: i1.MultiThemeService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.0.1", type: MultiThemeComponent, selector: "ang-multi-theme", ngImport: i0, template: "<ng-template #content let-offcanvas>\n  <div class=\"offcanvas-header\">\n    <h2 class=\"offcanvas-title\">Change Thme</h2>\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      aria-label=\"Close\"\n      (click)=\"offcanvas.dismiss('Cross click')\"\n    ></button>\n  </div>\n  <div class=\"offcanvas-body\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        (change)=\"changeTheme()\"\n        id=\"flexRadioDefault1\"\n        value=\"\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault1\"> Default </label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        (change)=\"changeTheme()\"\n        id=\"flexRadioDefault2\"\n        value=\"theme1\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault2\"> theme 1 </label>\n    </div>\n\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        id=\"flexRadioDefault3\"\n        (change)=\"changeTheme()\"\n        value=\"theme2\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault3\"> theme 2 </label>\n    </div>\n\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        id=\"flexRadioDefault4\"\n        value=\"theme3\"\n        (change)=\"changeTheme()\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault4\"> theme 3 </label>\n    </div>\n  </div>\n</ng-template>\n\n<button class=\"btn btn-primary mb-2 me-2\" (click)=\"openThemeCanvas(content)\">\n  <i class=\"bi bi-gear\"></i>\n</button>\n", dependencies: [{ kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] }); }
}
export { MultiThemeComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.1", ngImport: i0, type: MultiThemeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ang-multi-theme', template: "<ng-template #content let-offcanvas>\n  <div class=\"offcanvas-header\">\n    <h2 class=\"offcanvas-title\">Change Thme</h2>\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      aria-label=\"Close\"\n      (click)=\"offcanvas.dismiss('Cross click')\"\n    ></button>\n  </div>\n  <div class=\"offcanvas-body\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        (change)=\"changeTheme()\"\n        id=\"flexRadioDefault1\"\n        value=\"\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault1\"> Default </label>\n    </div>\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        (change)=\"changeTheme()\"\n        id=\"flexRadioDefault2\"\n        value=\"theme1\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault2\"> theme 1 </label>\n    </div>\n\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        id=\"flexRadioDefault3\"\n        (change)=\"changeTheme()\"\n        value=\"theme2\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault3\"> theme 2 </label>\n    </div>\n\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"flexRadioDefault\"\n        id=\"flexRadioDefault4\"\n        value=\"theme3\"\n        (change)=\"changeTheme()\"\n        [(ngModel)]=\"selectedTheme\"\n      />\n      <label class=\"form-check-label\" for=\"flexRadioDefault4\"> theme 3 </label>\n    </div>\n  </div>\n</ng-template>\n\n<button class=\"btn btn-primary mb-2 me-2\" (click)=\"openThemeCanvas(content)\">\n  <i class=\"bi bi-gear\"></i>\n</button>\n" }]
        }], ctorParameters: function () { return [{ type: i1.MultiThemeService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktdGhlbWUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbXVsdGktdGhlbWUvc3JjL2xpYi9tdWx0aS10aGVtZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9tdWx0aS10aGVtZS9zcmMvbGliL211bHRpLXRoZW1lLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7OztBQUcxRCxNQUthLG1CQUFtQjtJQUk5QixZQUFvQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtRQUh0QyxxQkFBZ0IsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDaEQsa0JBQWEsR0FBRyxFQUFFLENBQUM7SUFFOEIsQ0FBQztJQUVsRCxlQUFlLENBQUMsT0FBeUI7UUFDdkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzdDLENBQUM7OEdBWlUsbUJBQW1CO2tHQUFuQixtQkFBbUIsdURDVGhDLCs5REFtRUE7O1NEMURhLG1CQUFtQjsyRkFBbkIsbUJBQW1CO2tCQUwvQixTQUFTOytCQUNFLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgaW5qZWN0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiT2ZmY2FudmFzIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHsgTXVsdGlUaGVtZVNlcnZpY2UgfSBmcm9tICcuL211bHRpLXRoZW1lLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbmctbXVsdGktdGhlbWUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbXVsdGktdGhlbWUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZXM6IFtdLFxufSlcbmV4cG9ydCBjbGFzcyBNdWx0aVRoZW1lQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBvZmZjYW52YXNTZXJ2aWNlID0gaW5qZWN0KE5nYk9mZmNhbnZhcyk7XG4gIHNlbGVjdGVkVGhlbWUgPSAnJztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNlcnZpY2U6IE11bHRpVGhlbWVTZXJ2aWNlKSB7fVxuXG4gIG9wZW5UaGVtZUNhbnZhcyhjb250ZW50OiBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgdGhpcy5vZmZjYW52YXNTZXJ2aWNlLm9wZW4oY29udGVudCwgeyBwb3NpdGlvbjogJ2VuZCcsIGJhY2tkcm9wOiBmYWxzZSB9KTtcbiAgfVxuXG4gIGNoYW5nZVRoZW1lKCkge1xuICAgIHRoaXMuc2VydmljZS5sb2FkVGhlbWUodGhpcy5zZWxlY3RlZFRoZW1lKTtcbiAgfVxufVxuIiwiPG5nLXRlbXBsYXRlICNjb250ZW50IGxldC1vZmZjYW52YXM+XG4gIDxkaXYgY2xhc3M9XCJvZmZjYW52YXMtaGVhZGVyXCI+XG4gICAgPGgyIGNsYXNzPVwib2ZmY2FudmFzLXRpdGxlXCI+Q2hhbmdlIFRobWU8L2gyPlxuICAgIDxidXR0b25cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgY2xhc3M9XCJidG4tY2xvc2VcIlxuICAgICAgYXJpYS1sYWJlbD1cIkNsb3NlXCJcbiAgICAgIChjbGljayk9XCJvZmZjYW52YXMuZGlzbWlzcygnQ3Jvc3MgY2xpY2snKVwiXG4gICAgPjwvYnV0dG9uPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cIm9mZmNhbnZhcy1ib2R5XCI+XG4gICAgPGRpdiBjbGFzcz1cImZvcm0tY2hlY2tcIj5cbiAgICAgIDxpbnB1dFxuICAgICAgICBjbGFzcz1cImZvcm0tY2hlY2staW5wdXRcIlxuICAgICAgICB0eXBlPVwicmFkaW9cIlxuICAgICAgICBuYW1lPVwiZmxleFJhZGlvRGVmYXVsdFwiXG4gICAgICAgIChjaGFuZ2UpPVwiY2hhbmdlVGhlbWUoKVwiXG4gICAgICAgIGlkPVwiZmxleFJhZGlvRGVmYXVsdDFcIlxuICAgICAgICB2YWx1ZT1cIlwiXG4gICAgICAgIFsobmdNb2RlbCldPVwic2VsZWN0ZWRUaGVtZVwiXG4gICAgICAvPlxuICAgICAgPGxhYmVsIGNsYXNzPVwiZm9ybS1jaGVjay1sYWJlbFwiIGZvcj1cImZsZXhSYWRpb0RlZmF1bHQxXCI+IERlZmF1bHQgPC9sYWJlbD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiZm9ybS1jaGVja1wiPlxuICAgICAgPGlucHV0XG4gICAgICAgIGNsYXNzPVwiZm9ybS1jaGVjay1pbnB1dFwiXG4gICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgIG5hbWU9XCJmbGV4UmFkaW9EZWZhdWx0XCJcbiAgICAgICAgKGNoYW5nZSk9XCJjaGFuZ2VUaGVtZSgpXCJcbiAgICAgICAgaWQ9XCJmbGV4UmFkaW9EZWZhdWx0MlwiXG4gICAgICAgIHZhbHVlPVwidGhlbWUxXCJcbiAgICAgICAgWyhuZ01vZGVsKV09XCJzZWxlY3RlZFRoZW1lXCJcbiAgICAgIC8+XG4gICAgICA8bGFiZWwgY2xhc3M9XCJmb3JtLWNoZWNrLWxhYmVsXCIgZm9yPVwiZmxleFJhZGlvRGVmYXVsdDJcIj4gdGhlbWUgMSA8L2xhYmVsPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cImZvcm0tY2hlY2tcIj5cbiAgICAgIDxpbnB1dFxuICAgICAgICBjbGFzcz1cImZvcm0tY2hlY2staW5wdXRcIlxuICAgICAgICB0eXBlPVwicmFkaW9cIlxuICAgICAgICBuYW1lPVwiZmxleFJhZGlvRGVmYXVsdFwiXG4gICAgICAgIGlkPVwiZmxleFJhZGlvRGVmYXVsdDNcIlxuICAgICAgICAoY2hhbmdlKT1cImNoYW5nZVRoZW1lKClcIlxuICAgICAgICB2YWx1ZT1cInRoZW1lMlwiXG4gICAgICAgIFsobmdNb2RlbCldPVwic2VsZWN0ZWRUaGVtZVwiXG4gICAgICAvPlxuICAgICAgPGxhYmVsIGNsYXNzPVwiZm9ybS1jaGVjay1sYWJlbFwiIGZvcj1cImZsZXhSYWRpb0RlZmF1bHQzXCI+IHRoZW1lIDIgPC9sYWJlbD5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJmb3JtLWNoZWNrXCI+XG4gICAgICA8aW5wdXRcbiAgICAgICAgY2xhc3M9XCJmb3JtLWNoZWNrLWlucHV0XCJcbiAgICAgICAgdHlwZT1cInJhZGlvXCJcbiAgICAgICAgbmFtZT1cImZsZXhSYWRpb0RlZmF1bHRcIlxuICAgICAgICBpZD1cImZsZXhSYWRpb0RlZmF1bHQ0XCJcbiAgICAgICAgdmFsdWU9XCJ0aGVtZTNcIlxuICAgICAgICAoY2hhbmdlKT1cImNoYW5nZVRoZW1lKClcIlxuICAgICAgICBbKG5nTW9kZWwpXT1cInNlbGVjdGVkVGhlbWVcIlxuICAgICAgLz5cbiAgICAgIDxsYWJlbCBjbGFzcz1cImZvcm0tY2hlY2stbGFiZWxcIiBmb3I9XCJmbGV4UmFkaW9EZWZhdWx0NFwiPiB0aGVtZSAzIDwvbGFiZWw+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeSBtYi0yIG1lLTJcIiAoY2xpY2spPVwib3BlblRoZW1lQ2FudmFzKGNvbnRlbnQpXCI+XG4gIDxpIGNsYXNzPVwiYmkgYmktZ2VhclwiPjwvaT5cbjwvYnV0dG9uPlxuIl19